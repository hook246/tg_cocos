{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/draw/drawModel.ts"],"names":["_decorator","basePageModel","drawView","GlobalData","ccclass","property","walletUrls","bindWallet","unbindWallet","queryBindWallet","drawModel","drawPage","start","window","bindUxuyWallet","view","getComponent","update","deltaTime","initData","walletInfo","getWalletInfo","walletAddress","setWalletInfo","controlConnectWalletBtnsVisible","walletChain","uxuyethereum","_account","address","chainName","uxuyWalletConnect","console","log","axios","post","headers","token","error","unBindWallet","controlUnbindBtnVisible","controlBindBtnVisible","data","code","copyAddress","navigator","clipboard","writeText","string","then","Telegram","WebApp","showPopup","title","message","buttons","id","text","type","buttonId","catch","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,a,iBAAAA,a;;AAGAC,MAAAA,Q,iBAAAA,Q;;AACFC,MAAAA,U;;;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;4BAmBjBM,U,GAAa;AACxBC,QAAAA,UAAU,EAAE,8DADY;AAExBC,QAAAA,YAAY,EACV,gEAHsB;AAIxBC,QAAAA,eAAe,EACb;AALsB,O;;2BAqCbC,S,WADZN,OAAO,CAAC,WAAD,C,gBAAR,MACaM,SADb;AAAA;AAAA,0CAC6C;AAAA;AAAA;AAAA,eAC3CC,QAD2C;AAAA;;AAErCC,QAAAA,KAAK,GAAG;AAAA;;AAAA;AACZC,YAAAA,MAAM,CAACC,cAAP,GAAwB,KAAI,CAACA,cAA7B;AACA,YAAA,KAAI,CAACH,QAAL,GAAgB,KAAI,CAACI,IAAL,CAAUC,YAAV;AAAA;AAAA,qCAAhB;AAFY;AAGb;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE;;AAEtBC,QAAAA,QAAQ,GAAE;AAAA;;AAAA;AACd,gBAAMC,UAAU,SAAS,MAAI,CAACC,aAAL,EAAzB;;AACA,gBAAGD,UAAH,YAAGA,UAAU,CAAEE,aAAf,EAA6B;AAC3B,cAAA,MAAI,CAACX,QAAL,CAAcY,aAAd,CAA4BH,UAA5B,oBAA4BA,UAAU,CAAEE,aAAxC;AACD;AAJa;AAKf;;AAEKR,QAAAA,cAAc,GAAG;AAAA;;AAAA;AACrB,gBAAI;AACF,cAAA,MAAI,CAACH,QAAL,CAAca,+BAAd,CAA8C,KAA9C;;AACA,kBAAIF,aAAJ;AACA,kBAAIG,WAAJ;;AACA,kBAAGZ,MAAM,CAACa,YAAP,CAAoBC,QAApB,CAA6BC,OAAhC,EAAwC;AACtCN,gBAAAA,aAAa,GAAGT,MAAM,CAACa,YAAP,CAAoBC,QAApB,CAA6BC,OAA7C;AACAH,gBAAAA,WAAW,GAAGZ,MAAM,CAACa,YAAP,CAAoBC,QAApB,CAA6BE,SAA3C;AACD,eAHD,MAGK;AACH,sBAAMhB,MAAM,CAACiB,iBAAP,EAAN;AACAR,gBAAAA,aAAa,GAAGT,MAAM,CAACa,YAAP,CAAoBC,QAApB,CAA6BC,OAA7C;AACAH,gBAAAA,WAAW,GAAGZ,MAAM,CAACa,YAAP,CAAoBC,QAApB,CAA6BE,SAA3C;AACD;;AACDE,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBV,aAAvB,EAAsCG,WAAtC;AACA,kBAAML,UAAU,SAASP,MAAM,CAACoB,KAAP,CAAaC,IAAb,CACvB5B,UAAU,CAACC,UADY,EACD;AACpBe,gBAAAA,aAAa,EAAEA,aADK;AAEpBG,gBAAAA,WAAW,EAAEA;AAFO,eADC,EAIrB;AACAU,gBAAAA,OAAO,EAAE;AACL,+CAA2B;AAAA;AAAA,gDAAWC;AADjC;AADT,eAJqB,CAAzB;;AAUA,cAAA,MAAI,CAACzB,QAAL,CAAcY,aAAd,CAA4BD,aAA5B;AAED,aAzBD,CAyBE,OAAOe,KAAP,EAAc,CAEf;AA5BoB;AA6BtB;;AAEKC,QAAAA,YAAY,GAAG;AAAA;;AAAA;AAAA;;AACnB,gBAAMlB,UAAU,SAASP,MAAM,CAACoB,KAAP,CAAaC,IAAb,CACvB5B,UAAU,CAACE,YADY,EAExB,EAFwB,EAErB;AACA2B,cAAAA,OAAO,EAAE;AACH,6CAA2B;AAAA;AAAA,8CAAWC;AADnC;AADT,aAFqB,CAAzB;;AAOA,YAAA,MAAI,CAACzB,QAAL,CAAc4B,uBAAd,CAAsC,KAAtC;;AACA,YAAA,MAAI,CAAC5B,QAAL,CAAc6B,qBAAd,CAAoC,IAApC;;AACA,mBAAOpB,UAAP,wCAAOA,UAAU,CAAEqB,IAAnB,qBAAO,iBAAkBC,IAAzB;AAVmB;AAWpB;;AAEKrB,QAAAA,aAAa,GAAG;AAAA;AAAA;;AACpB,gBAAMD,UAAU,SAASP,MAAM,CAACoB,KAAP,CAAaC,IAAb,CACvB5B,UAAU,CAACG,eADY,EAExB,EAFwB,EAErB;AACA0B,cAAAA,OAAO,EAAE;AACH,6CAA2B;AAAA;AAAA,8CAAWC;AADnC;AADT,aAFqB,CAAzB;AAOA,mBAAOhB,UAAP,yCAAOA,UAAU,CAAEqB,IAAnB,qBAAO,kBAAkBA,IAAzB;AARoB;AASrB;;AAEKE,QAAAA,WAAW,GAAE;AAAA;;AAAA;AACjBC,YAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8B,MAAI,CAACnC,QAAL,CAAciB,OAAd,CAAsBmB,MAApD,EAA4DC,IAA5D,CAAiE,YAAW;AAC1EnC,cAAAA,MAAM,CAACoC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC;AAC/BC,gBAAAA,KAAK,EAAE,cADwB;AACR;AACvBC,gBAAAA,OAAO,EAAE,uBAFsB;AAEG;AAClCC,gBAAAA,OAAO,EAAE,CACP;AAAEC,kBAAAA,EAAE,EAAE,MAAN;AAAcC,kBAAAA,IAAI,EAAE,UAApB;AAAgCC,kBAAAA,IAAI,EAAE;AAAtC,iBADO,EACuC;AAC9C;AAAEF,kBAAAA,EAAE,EAAE,MAAN;AAAcC,kBAAAA,IAAI,EAAE,UAApB;AAAgCC,kBAAAA,IAAI,EAAE;AAAtC,iBAFO;AAHsB,eAAjC,EAOIC,QAAD,IAAc;AACf;AACA,oBAAIA,QAAJ,EAAc;AACZ3B,kBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC0B,QAApC;AACD,iBAFD,MAEO;AACL3B,kBAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD;AACF,eAdD;AAeD,aAhBD,EAgBG2B,KAhBH,CAgBSC,GAAG,IAAI;AACd/C,cAAAA,MAAM,CAACoC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC;AAC/BC,gBAAAA,KAAK,EAAE,aADwB;AACT;AACtBC,gBAAAA,OAAO,EAAE,qBAFsB;AAEC;AAChCC,gBAAAA,OAAO,EAAE,CACP;AAAEC,kBAAAA,EAAE,EAAE,MAAN;AAAcC,kBAAAA,IAAI,EAAE,UAApB;AAAgCC,kBAAAA,IAAI,EAAE;AAAtC,iBADO,EACuC;AAC9C;AAAEF,kBAAAA,EAAE,EAAE,MAAN;AAAcC,kBAAAA,IAAI,EAAE,UAApB;AAAgCC,kBAAAA,IAAI,EAAE;AAAtC,iBAFO;AAHsB,eAAjC,EAOIC,QAAD,IAAc;AACf;AACA,oBAAIA,QAAJ,EAAc;AACZ3B,kBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC0B,QAApC;AACD,iBAFD,MAEO;AACL3B,kBAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD;AACF,eAdD;AAeD,aAhCD;AADiB;AAkClB;;AAzG0C,O","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { AxiosResponse } from \"../login/loginModel\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport { drawView } from \"./drawView\";\nimport GlobalData from '../home/GloabalClass'\nconst { ccclass, property } = _decorator;\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    uxuyethereum: any;\n    uxuyWalletConnect: any;\n\n    bindUxuyWallet\n  }\n}\n\nexport const walletUrls = {\n  bindWallet: \"https://api.infinitytest.cc/api/v1/user/info/edit/bindWallet\",\n  unbindWallet:\n    \"https://api.infinitytest.cc/api/v1/user/info/edit/unbindWallet\",\n  queryBindWallet:\n    \"https://api.infinitytest.cc/api/v1/user/info/queryBindWallet\",\n};\n\nexport interface BindWalletData {\n  walletAddress: string;\n  walletChain: string;\n}\n\nexport interface BindWalletResponse {\n  code: string;\n  message: string;\n}\n\nexport interface UnbindWalletData {}\n\nexport interface UnbindWalletResponse {\n  code: string;\n  message: string;\n}\n\nexport interface QueryBindWalletData {}\n\nexport interface QueryBindWalletResponse {\n  code: string;\n  data: {\n    walletAddress: string;\n    walletChain: string;\n  };\n  message: string;\n}\n\n@ccclass(\"drawModel\")\nexport class drawModel extends basePageModel {\n  drawPage: drawView\n  async start() {\n    window.bindUxuyWallet = this.bindUxuyWallet\n    this.drawPage = this.view.getComponent(drawView)\n  }\n\n  update(deltaTime: number) {}\n\n  async initData(){\n    const walletInfo = await this.getWalletInfo()\n    if(walletInfo?.walletAddress){\n      this.drawPage.setWalletInfo(walletInfo?.walletAddress)\n    }\n  }\n\n  async bindUxuyWallet() {\n    try {\n      this.drawPage.controlConnectWalletBtnsVisible(false)\n      let walletAddress\n      let walletChain\n      if(window.uxuyethereum._account.address){\n        walletAddress = window.uxuyethereum._account.address\n        walletChain = window.uxuyethereum._account.chainName\n      }else{\n        await window.uxuyWalletConnect()\n        walletAddress = window.uxuyethereum._account.address\n        walletChain = window.uxuyethereum._account.chainName\n      }\n      console.log('========',walletAddress, walletChain)\n      const walletInfo = await window.axios.post<BindWalletResponse>(\n        walletUrls.bindWallet,{\n          walletAddress: walletAddress,\n          walletChain: walletChain,\n        },{\n          headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n            }\n        }\n      );\n      this.drawPage.setWalletInfo(walletAddress)\n\n    } catch (error) {\n      \n    }\n  }\n\n  async unBindWallet() {\n    const walletInfo = await window.axios.post<UnbindWalletResponse>(\n      walletUrls.unbindWallet\n    ,{},{\n        headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n          }\n    });\n    this.drawPage.controlUnbindBtnVisible(false)\n    this.drawPage.controlBindBtnVisible(true)\n    return walletInfo?.data?.code;\n  }\n\n  async getWalletInfo() {\n    const walletInfo = await window.axios.post<QueryBindWalletResponse>(\n      walletUrls.queryBindWallet\n    ,{},{\n        headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n          }\n    });\n    return walletInfo?.data?.data;\n  }\n\n  async copyAddress(){\n    navigator.clipboard.writeText(this.drawPage.address.string).then(function() {\n      window.Telegram.WebApp.showPopup({\n        title: 'Copy Success', // 弹出窗口的标题\n        message: 'copy address success！', // 弹出窗口的消息内容\n        buttons: [\n          { id: 'btn2', text: 'Button 2', type: 'ok' }, // 'type' 可以是 'ok', 'close', 'cancel', 'default', 'destructive'\n          { id: 'btn3', text: 'Button 3', type: 'cancel' }\n        ]\n      }, (buttonId) => {\n        // 弹出窗口关闭时的回调函数\n        if (buttonId) {\n          console.log('User pressed button:', buttonId);\n        } else {\n          console.log('Popup was closed without pressing a button');\n        }\n      });\n    }).catch(err => {\n      window.Telegram.WebApp.showPopup({\n        title: 'Copy failed', // 弹出窗口的标题\n        message: 'copy address failed', // 弹出窗口的消息内容\n        buttons: [\n          { id: 'btn2', text: 'Button 2', type: 'ok' }, // 'type' 可以是 'ok', 'close', 'cancel', 'default', 'destructive'\n          { id: 'btn3', text: 'Button 3', type: 'cancel' }\n        ]\n      }, (buttonId) => {\n        // 弹出窗口关闭时的回调函数\n        if (buttonId) {\n          console.log('User pressed button:', buttonId);\n        } else {\n          console.log('Popup was closed without pressing a button');\n        }\n      });\n    });\n  }\n}\n"]}