{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","Node","basePageModel","loginView","GlobalData","drawModel","discoverModel","homeView","inviteModel","ccclass","property","tg_token","macSHA_secret","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","twitterOauth","bindTwitter","unBindTwitter","loginModel","Boolean","start","view","getComponent","tgId","URLSearchParams","window","location","search","get","code","state","isUseMock","setPosition","isFirst","checkLoginFirst","controlLoading","controlLoginTypeBtnsVisible","update","deltaTime","isFirstLogin","axios","post","id","Telegram","WebApp","initDataUnsafe","user","data","firstLogin","error","console","log","initData","loginData","token","bindData","headers","inviteCode","JSON","parse","atob","home","game_point","string","String","gamePoint","routeToHome","initOtherModel","draw","discover","invite","veteranLogin","checkVeteranInput","showVeteranError","accountUserName","getAccountInputString","loginChannel","password","getPasswordInputString"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { loginView } from \"./loginView\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport _ from \"lodash\";\nimport GlobalData from \"../home/GloabalClass\";\nimport { drawModel } from \"../draw/drawModel\";\nimport { discoverModel } from \"../discover/discoverModel\";\nimport { homeView } from \"../home/homeView\";\nimport { inviteModel } from \"../invite/inviteModel\";\nconst { ccclass, property } = _decorator;\n\nconst tg_token = \"7293564939:AAE36f_ferIUCKuMrvgZ_dwNmtyh4oKsJ6s\";\nconst macSHA_secret =\n  \"0d42f108fb7d74f3735c61b1ecdeb8662bef043f2afed10fb3cd3aba3007e0ff\";\n\nexport interface AxiosResponse<T = any, D = any> {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: any;\n  config: any;\n  request?: any;\n}\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    Telegram: any;\n    CryptoJS: any;\n  }\n}\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login/webapp\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport const twitterOauth = {\n  bindTwitter: \"https://api.infinitytest.cc/api/v1/oauth/getTwitterCode\",\n  unBindTwitter: \"https://api.infinitytest.cc/api/v1/oauth/unboundTwitter\",\n};\n\nexport interface bindTwitterResponse {\n  code: string;\n  data: {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    scope: string;\n    tokenType: string;\n  };\n  message: string;\n}\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  initData: string;\n  inviteCode: string;\n  loginChannel: string;\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  password: string;\n  initData?: string;\n  inviteCode?: string;\n  loginChannel?: \"GAME_LOBBY\";\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass(\"loginModel\")\nexport class loginModel extends basePageModel {\n  @property(Boolean)\n  isUseMock: boolean = false;\n\n  @property(Node)\n  discover: Node = null;\n\n  @property(Node)\n  invite: Node = null;\n\n  @property(Node)\n  earn: Node = null;\n\n  @property(Node)\n  draw: Node = null;\n\n  @property(Node)\n  home: Node = null;\n\n  loginView: loginView;\n  async start() {\n    this.loginView = this.view.getComponent(loginView);\n    const tgId = new URLSearchParams(window.location.search).get(\"tgId\");\n    const code = new URLSearchParams(window.location.search).get(\"code\");\n    const state = new URLSearchParams(window.location.search).get(\"state\");\n    if (tgId && code) {\n      this.bindTwitter(tgId, code, state)\n    }\n    if (this.isUseMock) {\n    }\n    this.view.setPosition(0, 0);\n    const isFirst = await this.checkLoginFirst();\n    if (isFirst) {\n      //展示登录页面\n      this.loginView.controlLoading(false);\n      this.loginView.controlLoginTypeBtnsVisible(true);\n    } else {\n      await this.tgLogin();\n    }\n  }\n\n  update(deltaTime: number) {}\n\n  async checkLoginFirst() {\n    try {\n      const isFirstLogin = await window.axios.post<firstLoginCheckResponseType>(\n        loginUrls.firstLoginCheck,\n        {\n          id: window.Telegram.WebApp.initDataUnsafe.user.id,\n        }\n      );\n      return isFirstLogin.data.data.firstLogin;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async bindTwitter(initData, code, state) {\n    try {\n      const loginData = await window.axios.post<tgLoginResponseType>(\n        loginUrls.tgLogin,\n        {\n          initData: initData,\n        }\n      );\n      if (loginData?.data?.data?.token) {\n        //登录成功\n        GlobalData.token = loginData?.data?.data?.token;\n        const bindData = await window.axios.post<bindTwitterResponse>(\n          loginUrls.tgLogin,\n          {\n            code: code,\n            state: state,\n          },{\n            headers: { \n                  'Authorization': `Bearer ${loginData?.data?.data?.token}`\n            }\n        })\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async tgLogin() {\n    try {\n      const inviteCode = new URLSearchParams(window.location.search).get(\n        \"tgWebAppStartParam\"\n      );\n      const loginData = await window.axios.post<tgLoginResponseType>(\n        loginUrls.tgLogin,\n        {\n          initData: window?.Telegram?.WebApp?.initData\n            ? window?.Telegram?.WebApp?.initData\n            : \"query_id=AAF7JpQPAwAAAHsmlA8sgKRl&user=%7B%22id%22%3A6703818363%2C%22first_name%22%3A%22fei%22%2C%22last_name%22%3A%22wang%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1727265053&hash=c9d448b5ce4ae47ad145d6f7f60551f73aafd726d508afa86083d6e41f342711\",\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          inviteCode: inviteCode\n            ? JSON.parse(window.atob(inviteCode)).inviteCode\n            : \"\",\n        }\n      );\n      console.log(\"=========\", loginData);\n      if (loginData?.data?.data?.token) {\n        //登录成功\n        GlobalData.token = loginData?.data?.data?.token;\n        GlobalData.inviteCode = loginData?.data?.data?.inviteCode;\n        this.home.getComponent(homeView).game_point.string = String(\n          loginData.data.data.gamePoint\n        );\n        this.loginView.routeToHome();\n        await this.initOtherModel();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async initOtherModel() {\n    await this.draw.getComponent(drawModel).initData();\n    await this.discover.getComponent(discoverModel).initData();\n    await this.invite.getComponent(inviteModel).initData();\n  }\n\n  async veteranLogin() {\n    if (this.loginView.checkVeteranInput()) {\n      this.loginView.showVeteranError(true);\n    }\n\n    try {\n      const inviteCode = new URLSearchParams(window.location.search).get(\n        \"tgWebAppStartParam\"\n      );\n      const loginData = await window.axios.post<pwdLoginResponseType>(\n        loginUrls.pwdLogin,\n        {\n          accountUserName: this.loginView.getAccountInputString(),\n          initData: window?.Telegram?.WebApp?.initData\n            ? window?.Telegram?.WebApp?.initData\n            : \"query_id=AAF7JpQPAwAAAHsmlA8sgKRl&user=%7B%22id%22%3A6703818363%2C%22first_name%22%3A%22fei%22%2C%22last_name%22%3A%22wang%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1727265053&hash=c9d448b5ce4ae47ad145d6f7f60551f73aafd726d508afa86083d6e41f342711\",\n          loginChannel: \"GAME_LOBBY\",\n          password: this.loginView.getPasswordInputString(),\n          inviteCode: inviteCode\n            ? JSON.parse(window.atob(inviteCode)).inviteCode\n            : \"\",\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          //username: \"\",\n        }\n      );\n\n      if (loginData?.data?.data?.token) {\n        GlobalData.token = loginData?.data?.data?.token;\n        this.loginView.routeToHome();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"]}