{"version":3,"sources":["file:///Users/feiwang/tg_cocos/NewProject_4/assets/resources/scripts/test/testSortChildren.ts"],"names":["_decorator","Component","ccclass","property","NewComponent","start","children","node","update","deltaTime","up","index","temp","setPosition","getPosition","down","length"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OAEf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;8BAGjBI,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb,SACkCH,SADlC,CAC4C;AACxCI,QAAAA,KAAK,GAAG;AACJ;AACA;AACA;AACA,cAAMC,QAAQ,GAAG,KAAKC,IAAL,CAAUD,QAA3B;AACH;;AAEDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,EAAE,CAACC,KAAD,EAAO;AACL,cAAMC,IAAI,GAAG,KAAKL,IAAL,CAAUD,QAAV,CAAmBK,KAAnB,CAAb;AACA,eAAKJ,IAAL,CAAUD,QAAV,CAAmBK,KAAnB,IAA4B,KAAKJ,IAAL,CAAUD,QAAV,CAAmB,CAAnB,CAA5B;AACA,eAAKC,IAAL,CAAUD,QAAV,CAAmBK,KAAnB,EAA0BE,WAA1B,CAAsC,KAAKN,IAAL,CAAUD,QAAV,CAAmB,CAAnB,EAAsBQ,WAAtB,EAAtC;AACA,eAAKP,IAAL,CAAUD,QAAV,CAAmB,CAAnB,IAAwBM,IAAxB;AACA,eAAKL,IAAL,CAAUD,QAAV,CAAmB,CAAnB,EAAsBO,WAAtB,CAAkCD,IAAI,CAACE,WAAL,EAAlC;AACH;;AAEDC,QAAAA,IAAI,CAACJ,KAAD,EAAO;AACP,cAAMC,IAAI,GAAG,KAAKL,IAAL,CAAUD,QAAV,CAAmBK,KAAnB,CAAb;AACA,eAAKJ,IAAL,CAAUD,QAAV,CAAmBK,KAAnB,IAA4B,KAAKJ,IAAL,CAAUD,QAAV,CAAmB,KAAKC,IAAL,CAAUD,QAAV,CAAmBU,MAAnB,GAA4B,CAA/C,CAA5B;AACA,eAAKT,IAAL,CAAUD,QAAV,CAAmBK,KAAnB,EAA0BE,WAA1B,CAAsC,KAAKN,IAAL,CAAUD,QAAV,CAAmB,KAAKC,IAAL,CAAUD,QAAV,CAAmBU,MAAnB,GAA4B,CAA/C,EAAkDF,WAAlD,EAAtC;AACA,eAAKP,IAAL,CAAUD,QAAV,CAAmB,KAAKC,IAAL,CAAUD,QAAV,CAAmBU,MAAnB,GAA4B,CAA/C,IAAoDJ,IAApD;AACA,eAAKL,IAAL,CAAUD,QAAV,CAAmB,KAAKC,IAAL,CAAUD,QAAV,CAAmBU,MAAnB,GAA4B,CAA/C,EAAkDH,WAAlD,CAA8DD,IAAI,CAACE,WAAL,EAA9D;AACH,SA1BuC,CA4BxC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AA5DwC,O","sourcesContent":["import { _decorator, Component, Node, UITransform } from 'cc';\nimport _ from 'lodash'\nconst { ccclass, property } = _decorator;\n\n@ccclass('NewComponent')\nexport class NewComponent extends Component {\n    start() {\n        // window['sortChildren'] = ()=>{\n        //     this.sort()\n        // } \n        const children = this.node.children\n    }\n\n    update(deltaTime: number) {\n        \n    }\n\n    up(index){\n        const temp = this.node.children[index]\n        this.node.children[index] = this.node.children[0]\n        this.node.children[index].setPosition(this.node.children[0].getPosition())\n        this.node.children[0] = temp\n        this.node.children[0].setPosition(temp.getPosition())\n    }\n\n    down(index){\n        const temp = this.node.children[index]\n        this.node.children[index] = this.node.children[this.node.children.length - 1]\n        this.node.children[index].setPosition(this.node.children[this.node.children.length - 1].getPosition())\n        this.node.children[this.node.children.length - 1] = temp\n        this.node.children[this.node.children.length - 1].setPosition(temp.getPosition())\n    }\n\n    // sort(){\n    // //    this.node.children.sort((a, b)=>{\n    // //         return b.getComponent(UITransform).width - a.getComponent(UITransform).width\n    // //    })\n    // const array = [0, 1, 2, 3, 0, 1, 2, 3, 0];\n\n    // // 使用 sort 方法进行排序\n    // array.sort((a, b) => {\n    //   // 如果一个是2，另一个不是2，则2在前\n    //   if (a === 2) return -1;\n    //   if (b === 2) return 1;\n    \n    //   // 如果一个是3，另一个不是3，则3在后\n    //   if (a === 3) return 1;\n    //   if (b === 3) return -1;\n    \n    //   // 如果一个是0或1，另一个是3，则0或1在前\n    //   if ((a === 0 || a === 1) && b === 3) return -1;\n    //   if ((b === 0 || b === 1) && a === 3) return 1;\n    \n    //   // 如果一个是0或1，另一个是2，则0或1在后\n    //   if ((a === 0 || a === 1) && b === 2) return 1;\n    //   if ((b === 0 || b === 1) && a === 2) return -1;\n    \n    //   // 否则，保持原始顺序（即0和1的相对位置不变）\n    //   return 0;\n    // });\n    \n    // console.log(array);\n    // // 输出: [2, 2, 0, 0, 1, 1, 3, 3, 3]\n    // // 输出: [2, 2, 0, 0, 1, 1, 3, 3, 3]\n    // // 输出: [2, 2, 0, 0, 1, 1, 3, 3, 3]\n    // }\n}\n\n"]}