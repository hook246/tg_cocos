{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","basePageModel","loginView","GlobalConfig","ccclass","property","tg_token","macSHA_secret","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","loginModel","Boolean","start","view","getComponent","isUseMock","setPosition","isFirst","checkLoginFirst","controlLoginTypeBtnsVisible","update","deltaTime","isFirstLogin","window","axios","post","id","Telegram","WebApp","initDataUnsafe","user","data","firstLogin","error","console","log","encodeHasString","auth_date","loginData","authDate","Number","firstName","first_name","hash","lastName","last_name","username","token","_instance","routeToHome","veteranLogin","checkVeteranInput","showVeteranError","accountUserName","getAccountInputString","loginChannel","password","getPasswordInputString"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { loginView } from \"./loginView\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport _ from \"lodash\";\nconst { ccclass, property } = _decorator;\n\nconst tg_token = '7293564939:AAE36f_ferIUCKuMrvgZ_dwNmtyh4oKsJ6s'\nconst macSHA_secret = '0d42f108fb7d74f3735c61b1ecdeb8662bef043f2afed10fb3cd3aba3007e0ff'\n\nexport interface AxiosResponse<T = any, D = any> {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: any;\n  config: any;\n  request?: any;\n}\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    Telegram: any;\n    CryptoJS: any\n  }\n}\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  password: string;\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass(\"loginModel\")\nexport class loginModel extends basePageModel {\n  @property(Boolean)\n  isUseMock: boolean = false;\n\n  loginView: loginView;\n  async start() {\n    this.loginView = this.view.getComponent(loginView);\n    if (this.isUseMock) {\n    }\n    this.view.setPosition(0, 0);\n    const isFirst = await this.checkLoginFirst();\n    if (isFirst) {\n      //展示登录页面\n      this.loginView.controlLoginTypeBtnsVisible(true);\n    } else {\n      await this.tgLogin();\n    }\n  }\n\n  update(deltaTime: number) {}\n\n  async checkLoginFirst() {\n    try {\n      const isFirstLogin = await window.axios.post<firstLoginCheckResponseType>(\n        loginUrls.firstLoginCheck,\n        {\n          id:  window.Telegram.WebApp.initDataUnsafe.user.id,\n        }\n      );\n      return isFirstLogin.data.data.firstLogin;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async tgLogin() {\n    try {\n      const encodeHasString = `auth_date=${window.Telegram.WebApp.initDataUnsafe.auth_date}\\nfirst_name=fei\\nid=6703818363\\lastName=wang`\n      //hex(HMAC_SHA256(data_check_string, secret_key)\n      //secret_key = SHA256(bot_token)\n      \n      const loginData = await window.axios.post<tgLoginResponseType>(\n        loginUrls.tgLogin,\n        {\n          authDate: Number(window.Telegram.WebApp.initDataUnsafe.auth_date),\n          firstName: `${\n             window.Telegram.WebApp.initDataUnsafe.user.first_name\n          }`,\n          hash: `${\n             window.Telegram.WebApp.initDataUnsafe.hash\n          }`,\n          id: window.Telegram.WebApp.initDataUnsafe.user.id,\n          lastName: `${\n            window.Telegram.WebApp.initDataUnsafe.user.last_name\n          }`,\n          //loginChannel: \"GAME_LOBBY\",\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          username: null,\n        }\n      );\n\n      if (loginData?.data?.data?.token) {\n        //登录成功\n        GlobalConfig._instance.token = loginData?.data?.data?.token;\n        this.loginView.routeToHome();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async veteranLogin() {\n    if (this.loginView.checkVeteranInput()) {\n      this.loginView.showVeteranError(true);\n    }\n\n    try {\n      const loginData = await window.axios.post<pwdLoginResponseType>(\n        loginUrls.pwdLogin,\n        {\n          accountUserName: this.loginView.getAccountInputString(),\n          authDate: Number(window.Telegram.WebApp.initDataUnsafe.auth_date),\n          firstName: `${\n            window.Telegram.WebApp.initDataUnsafe.user.first_name\n          }`,\n          hash: `${\n             window.Telegram.WebApp.initDataUnsafe.hash\n          }`,\n          id: window.Telegram.WebApp.initDataUnsafe.user.id,\n          lastName: `${\n            window.Telegram.WebApp.initDataUnsafe.user.last_name\n          }`,\n          loginChannel: \"GAME_LOBBY\",\n          password: this.loginView.getPasswordInputString(),\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          //username: \"\",\n        }\n      );\n\n      if (loginData?.data?.data?.token) {\n        GlobalConfig._instance.token = loginData?.data?.data?.token;\n        this.loginView.routeToHome();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"]}