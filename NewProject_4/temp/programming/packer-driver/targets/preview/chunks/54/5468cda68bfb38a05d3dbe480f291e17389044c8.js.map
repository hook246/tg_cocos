{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/draw/drawModel.ts"],"names":["_decorator","basePageModel","drawView","GlobalData","ccclass","property","walletUrls","bindWallet","unbindWallet","queryBindWallet","drawModel","drawPage","account","tonConnectUI","start","window","bindUxuyWallet","view","getComponent","console","log","manifest","TON_CONNECT_UI","TonConnectUI","manifestUrl","uiPreferences","onStatusChange","walletAndwalletInfo","walletInfo","axios","post","walletAddress","address","walletChain","chain","headers","token","setWalletInfo","update","deltaTime","bindTonWallet","openModal","initData","getWalletInfo","controlConnectWalletBtnsVisible","uxuyethereum","_account","chainName","uxuyWalletConnect","error","unBindWallet","controlUnbindBtnVisible","controlBindBtnVisible","wallet_address","data","code","copyAddress","navigator","clipboard","writeText","string","then","Telegram","WebApp","showPopup","title","message","buttons","id","text","type","buttonId","catch","err"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { AxiosResponse } from \"../login/loginModel\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport { drawView } from \"./drawView\";\nimport GlobalData from '../home/GloabalClass'\nconst { ccclass, property } = _decorator;\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    uxuyethereum: any;\n    uxuyWalletConnect: any;\n\n    bindUxuyWallet\n    TON_CONNECT_UI\n\n  }\n}\n\nexport const walletUrls = {\n  bindWallet: \"https://api.infinitytest.cc/api/v1/user/info/edit/bindWallet\",\n  unbindWallet:\n    \"https://api.infinitytest.cc/api/v1/user/info/edit/unbindWallet\",\n  queryBindWallet:\n    \"https://api.infinitytest.cc/api/v1/user/info/queryBindWallet\",\n};\n\nexport interface BindWalletData {\n  walletAddress: string;\n  walletChain: string;\n}\n\nexport interface BindWalletResponse {\n  code: string;\n  message: string;\n}\n\nexport interface UnbindWalletData {}\n\nexport interface UnbindWalletResponse {\n  code: string;\n  message: string;\n}\n\nexport interface QueryBindWalletData {}\n\nexport interface QueryBindWalletResponse {\n  code: string;\n  data: {\n    walletAddress: string;\n    walletChain: string;\n  };\n  message: string;\n}\n\n@ccclass(\"drawModel\")\nexport class drawModel extends basePageModel {\n  drawPage: drawView\n\n  account;\n  tonConnectUI;\n\n  async start() {\n    window.bindUxuyWallet = this.bindUxuyWallet\n    this.drawPage = this.view.getComponent(drawView)\n\n    console.log(\"INIT the tonconnect \", this.tonConnectUI);\n    //提供一个manifest的json文件记录一些标题图标等数据用于UI连接时的展示\n    const manifest = \"https://test.tonspay.top/api/manifest\";\n    console.log(manifest);\n    //获得TON_CONNECT_UI的实例\n    this.tonConnectUI = new window.TON_CONNECT_UI.TonConnectUI({\n      manifestUrl: manifest,\n      uiPreferences: {\n        //这里可以配置主题\n        // theme: TON_CONNECT_UI.THEME.DARK,\n      },\n    });\n    this.tonConnectUI.onStatusChange(async (walletAndwalletInfo) => {\n      //连接状态改变监听事件\n      console.log(\"change : \", walletAndwalletInfo);\n      this.account = walletAndwalletInfo;\n      const walletInfo = await window.axios.post<BindWalletResponse>(\n        walletUrls.bindWallet,{\n          walletAddress: walletAndwalletInfo.account.address,\n          walletChain: walletAndwalletInfo.account.chain,\n        },{\n          headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n            }\n        }\n      );\n      this.drawPage.setWalletInfo(walletAndwalletInfo.account.address)\n    });\n\n    // if(this.tonConnectUI.connected) {\n    //     //断开连接重新加载\n    //     console.log(\"Disconnect for connection reload\")\n    //     await this.tonConnectUI.disconnect();\n    // }\n  }\n\n  update(deltaTime: number) {}\n\n  async bindTonWallet() {\n    await this.tonConnectUI.openModal();\n  }\n\n  async initData(){\n    const walletInfo = await this.getWalletInfo()\n    if(walletInfo?.walletAddress){\n      this.drawPage.setWalletInfo(walletInfo?.walletAddress)\n    }\n  }\n\n  async bindUxuyWallet() {\n    try {\n      this.drawPage.controlConnectWalletBtnsVisible(false)\n      let walletAddress\n      let walletChain\n      if(window.uxuyethereum._account.address){\n        walletAddress = window.uxuyethereum._account.address\n        walletChain = window.uxuyethereum._account.chainName\n      }else{\n        await window.uxuyWalletConnect()\n        walletAddress = window.uxuyethereum._account.address\n        walletChain = window.uxuyethereum._account.chainName\n      }\n      console.log('========',walletAddress, walletChain)\n      const walletInfo = await window.axios.post<BindWalletResponse>(\n        walletUrls.bindWallet,{\n          walletAddress: walletAddress,\n          walletChain: walletChain,\n        },{\n          headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n            }\n        }\n      );\n      this.drawPage.setWalletInfo(walletAddress)\n\n    } catch (error) {\n      \n    }\n  }\n\n  async unBindWallet() {\n    const walletInfo = await window.axios.post<UnbindWalletResponse>(\n      walletUrls.unbindWallet\n    ,{},{\n        headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n          }\n    });\n    this.drawPage.controlUnbindBtnVisible(false)\n    this.drawPage.controlBindBtnVisible(true)\n    GlobalData.wallet_address = null\n    return walletInfo?.data?.code;\n  }\n\n  async getWalletInfo() {\n    const walletInfo = await window.axios.post<QueryBindWalletResponse>(\n      walletUrls.queryBindWallet\n    ,{},{\n        headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n          }\n    });\n    return walletInfo?.data?.data;\n  }\n\n  async copyAddress(){\n    navigator.clipboard.writeText(this.drawPage.address.string).then(function() {\n      window.Telegram.WebApp.showPopup({\n        title: 'Copy Success', // 弹出窗口的标题\n        message: 'copy address success！', // 弹出窗口的消息内容\n        buttons: [\n          { id: 'btn2', text: 'Button 2', type: 'ok' }, // 'type' 可以是 'ok', 'close', 'cancel', 'default', 'destructive'\n          { id: 'btn3', text: 'Button 3', type: 'cancel' }\n        ]\n      }, (buttonId) => {\n        // 弹出窗口关闭时的回调函数\n        if (buttonId) {\n          console.log('User pressed button:', buttonId);\n        } else {\n          console.log('Popup was closed without pressing a button');\n        }\n      });\n    }).catch(err => {\n      window.Telegram.WebApp.showPopup({\n        title: 'Copy failed', // 弹出窗口的标题\n        message: 'copy address failed', // 弹出窗口的消息内容\n        buttons: [\n          { id: 'btn2', text: 'Button 2', type: 'ok' }, // 'type' 可以是 'ok', 'close', 'cancel', 'default', 'destructive'\n          { id: 'btn3', text: 'Button 3', type: 'cancel' }\n        ]\n      }, (buttonId) => {\n        // 弹出窗口关闭时的回调函数\n        if (buttonId) {\n          console.log('User pressed button:', buttonId);\n        } else {\n          console.log('Popup was closed without pressing a button');\n        }\n      });\n    });\n  }\n}\n"]}