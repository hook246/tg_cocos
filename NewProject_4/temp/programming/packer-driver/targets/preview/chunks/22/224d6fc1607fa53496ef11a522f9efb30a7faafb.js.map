{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","Node","basePageModel","loginView","GlobalData","drawModel","discoverModel","homeView","inviteModel","ccclass","property","tg_token","macSHA_secret","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","loginModel","Boolean","start","view","getComponent","isUseMock","setPosition","isFirst","checkLoginFirst","controlLoading","controlLoginTypeBtnsVisible","update","deltaTime","isFirstLogin","window","axios","post","id","Telegram","WebApp","initDataUnsafe","user","data","firstLogin","error","console","log","loginData","initData","token","home","game_point","string","String","gamePoint","routeToHome","initOtherModel","draw","discover","invite","veteranLogin","checkVeteranInput","showVeteranError","accountUserName","getAccountInputString","loginChannel","password","getPasswordInputString"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { loginView } from \"./loginView\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport _ from \"lodash\";\nimport GlobalData from '../home/GloabalClass'\nimport { drawModel } from \"../draw/drawModel\";\nimport { discoverModel } from \"../discover/discoverModel\";\nimport { homeView } from \"../home/homeView\";\nimport { inviteModel } from \"../invite/inviteModel\";\nconst { ccclass, property } = _decorator;\n\nconst tg_token = '7293564939:AAE36f_ferIUCKuMrvgZ_dwNmtyh4oKsJ6s'\nconst macSHA_secret = '0d42f108fb7d74f3735c61b1ecdeb8662bef043f2afed10fb3cd3aba3007e0ff'\n\nexport interface AxiosResponse<T = any, D = any> {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: any;\n  config: any;\n  request?: any;\n}\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    Telegram: any;\n    CryptoJS: any\n  }\n}\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login/webapp\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  initData: string,\n  inviteCode: string,\n  loginChannel: string\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  password: string;\n  initData?: string;\n  inviteCode?: string;\n  loginChannel?: \"GAME_LOBBY\";\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass(\"loginModel\")\nexport class loginModel extends basePageModel {\n  @property(Boolean)\n  isUseMock: boolean = false;\n\n  @property(Node)\n  discover: Node = null;\n\n  @property(Node)\n  invite: Node = null;\n\n  @property(Node)\n  earn: Node = null;\n\n  @property(Node)\n  draw: Node = null;\n\n  @property(Node)\n  home: Node = null;\n\n  loginView: loginView;\n  async start() {\n    this.loginView = this.view.getComponent(loginView);\n    if (this.isUseMock) {\n    }\n    this.view.setPosition(0, 0);\n    const isFirst = await this.checkLoginFirst();\n    if (isFirst) {\n      //展示登录页面\n      this.loginView.controlLoading(false)\n      this.loginView.controlLoginTypeBtnsVisible(true);\n      \n    } else {\n\n      await this.tgLogin();\n    }\n  }\n\n  update(deltaTime: number) {}\n\n  async checkLoginFirst() {\n    try {\n      const isFirstLogin = await window.axios.post<firstLoginCheckResponseType>(\n        loginUrls.firstLoginCheck,\n        {\n          id:  window.Telegram.WebApp.initDataUnsafe.user.id,\n        }\n      );\n      return isFirstLogin.data.data.firstLogin;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async tgLogin() {\n    try {      \n      const loginData = await window.axios.post<tgLoginResponseType>(\n        loginUrls.tgLogin,\n        {\n          initData: window?.Telegram?.WebApp?.initData ? window?.Telegram?.WebApp?.initData : 'query_id=AAF7JpQPAwAAAHsmlA9oYcfG&user=%7B%22id%22%3A6703818363%2C%22first_name%22%3A%22fei%22%2C%22last_name%22%3A%22wang%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1727163763&hash=584d63e9e4dd7f30b169ca3ba878a750a763581d59652dd4c0c4dd4b74b1baf1'\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n        }\n      );\n      console.log('=========', loginData)\n      if (loginData?.data?.data?.token) {\n        //登录成功\n        GlobalData.token = loginData?.data?.data?.token;\n        this.home.getComponent(homeView).game_point.string = String(loginData.data.data.gamePoint)\n        this.loginView.routeToHome();\n        await this.initOtherModel()\n\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async initOtherModel(){\n    await this.draw.getComponent(drawModel).initData()\n    await this.discover.getComponent(discoverModel).initData()\n    await this.invite.getComponent(inviteModel).initData()\n  }\n\n  async veteranLogin() {\n    if (this.loginView.checkVeteranInput()) {\n      this.loginView.showVeteranError(true);\n    }\n\n    try {\n      const loginData = await window.axios.post<pwdLoginResponseType>(\n        loginUrls.pwdLogin,\n        {\n          accountUserName: this.loginView.getAccountInputString(),\n          initData: window?.Telegram?.WebApp?.initData ? window?.Telegram?.WebApp?.initData : 'query_id=AAF7JpQPAwAAAHsmlA9oYcfG&user=%7B%22id%22%3A6703818363%2C%22first_name%22%3A%22fei%22%2C%22last_name%22%3A%22wang%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1727163763&hash=584d63e9e4dd7f30b169ca3ba878a750a763581d59652dd4c0c4dd4b74b1baf1',\n          loginChannel: \"GAME_LOBBY\",\n          password: this.loginView.getPasswordInputString(),\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          //username: \"\",\n        }\n      );\n\n      if (loginData?.data?.data?.token) {\n        GlobalData.token = loginData?.data?.data?.token;\n        this.loginView.routeToHome();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n"]}