{"version":3,"sources":["file:///Users/feiwang/NewProject_4/node_modules/axios/lib/adapters/fetch.js"],"names":["platform","utils","AxiosError","composeSignals","trackStream","AxiosHeaders","progressEventReducer","progressEventDecorator","asyncDecorator","resolveConfig","settle","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","ReadableStream","encodeText","TextEncoder","encoder","str","encode","Uint8Array","arrayBuffer","test","fn","args","e","supportsRequestStream","duplexAccessed","hasContentType","origin","body","method","duplex","headers","has","DEFAULT_CHUNK_SIZE","supportsResponseStream","isReadableStream","resolvers","stream","res","forEach","type","isFunction","_","config","ERR_NOT_SUPPORT","getBodyLength","isBlob","size","isSpecCompliantForm","_request","byteLength","isArrayBufferView","isArrayBuffer","isURLSearchParams","isString","resolveBodyLength","length","toFiniteNumber","getContentLength","url","data","signal","cancelToken","timeout","onDownloadProgress","onUploadProgress","responseType","withCredentials","fetchOptions","toLowerCase","composedSignal","toAbortSignal","request","unsubscribe","requestContentLength","contentTypeHeader","isFormData","get","setContentType","onProgress","flush","isCredentialsSupported","prototype","toUpperCase","normalize","toJSON","credentials","undefined","response","isStreamResponse","options","prop","responseContentLength","responseData","findKey","Promise","resolve","reject","from","status","statusText","err","name","message","Object","assign","ERR_NETWORK","cause","code"],"mappings":"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","sourcesContent":["import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n"]}