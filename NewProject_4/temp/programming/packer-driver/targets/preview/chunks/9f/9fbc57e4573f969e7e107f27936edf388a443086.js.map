{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","axios","basePageModel","ccclass","property","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","loginModel","start","update","deltaTime","checkLoginFirst","isFirstLogin","post","id","data","firstLogin","loginData","token"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACFC,MAAAA,K;;AAEEC,MAAAA,a,iBAAAA,a;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;4BAElBK,U,0BAAAA,U;eAAAA,U;;;6BAEAC,W,0BAAAA,W;eAAAA,W;;;2BAECC,S,GAAY;AACvBC,QAAAA,eAAe,EAAE,0DADM;AAEvBC,QAAAA,OAAO,EAAE,uDAFc;AAGvBC,QAAAA,QAAQ,EAAE;AAHa,O;;4BAsFZC,U,WADZR,OAAO,CAAC,YAAD,C,gBAAR,MACaQ,UADb;AAAA;AAAA,0CAC8C;AAC3CC,QAAAA,KAAK,GAAG,CACP;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE;;AAEtBC,QAAAA,eAAe,GAAE;AAAA;AACrB,gBAAMC,YAAY,SAAS;AAAA;AAAA,gCAAMC,IAAN,CAAwCV,SAAS,CAACC,eAAlD,EAAmE;AAC1FU,cAAAA,EAAE,EAAE;AADsF,aAAnE,CAA3B;AAGA,mBAAOF,YAAY,CAACG,IAAb,CAAkBA,IAAlB,CAAuBC,UAA9B;AAJqB;AAKtB;;AAEKX,QAAAA,OAAO,GAAE;AAAA;AAAA;;AACb,gBAAMY,SAAS,SAAS;AAAA;AAAA,gCAAMJ,IAAN,CAAgCV,SAAS,CAACE,OAA1C,EAAmD;AACvES,cAAAA,EAAE,EAAE;AADmE,aAAnD,CAAxB;;AAIA,gBAAGG,SAAH,+BAAGA,SAAS,CAAEF,IAAd,qCAAG,gBAAiBA,IAApB,aAAG,qBAAuBG,KAA1B,EAAgC,CAC5B;AACH;AAPY;AAQd;;AA3B2C,O","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport axios from \"axios\";\nimport { loginView } from \"./loginView\";\nimport { basePageModel } from \"../common/basePageModel\";\nconst { ccclass, property } = _decorator;\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  password: string;\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass(\"loginModel\")\nexport class loginModel extends basePageModel {\n   start() {\n    // const isFirst = await this.checkLoginFirst()\n    // if(isFirst){\n    //     //展示登录页面\n    // }else{\n    //    await this.tgLogin()\n    // }\n  }\n\n  update(deltaTime: number) {}\n\n  async checkLoginFirst(){\n    const isFirstLogin = await axios.post<firstLoginCheckResponseType>(loginUrls.firstLoginCheck, {\n        id: 0\n    })\n    return isFirstLogin.data.data.firstLogin\n  }\n\n  async tgLogin(){\n    const loginData = await axios.post<tgLoginResponseType>(loginUrls.tgLogin, {\n        id: 0\n    })\n\n    if(loginData?.data?.data?.token){\n        //登录成功\n    }\n  }\n\n\n}\n"]}