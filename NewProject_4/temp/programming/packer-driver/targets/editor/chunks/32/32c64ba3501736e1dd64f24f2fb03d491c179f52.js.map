{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/earn/earnView.ts"],"names":["_decorator","instantiate","Node","Prefab","basePageView","ccclass","property","earnView","start","initTaskNode","info","data","checkInList","forEach","setCheckTaskNode","taskModelResponses","taskList","taskModelName","initSocialTaskNode","initDailyTaskNode","child","social_prefab","social_parent","addChild","daily_prefab","daily_parent","clickDailyOrSocialTaskNode","clickCheckTaskNode","changeCheckTaskState","changeDailyOrSocialTaskState","updateTaskState","type","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;;AAC1CC,MAAAA,Y,iBAAAA,Y;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAACH,MAAD,C,UAGRG,QAAQ,CAACH,MAAD,C,UAGRG,QAAQ,CAACJ,IAAD,C,UAGRI,QAAQ,CAACJ,IAAD,C,2BAZb,MACaK,QADb;AAAA;AAAA,wCAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAgBvCC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,YAAY,CAACC,IAAD,EAA2B;AACnCA,UAAAA,IAAI,CAACC,IAAL,CAAUC,WAAV,CAAsBC,OAAtB,CAA8B,MAAI;AAC9B,iBAAKC,gBAAL;AACH,WAFD;AAIAJ,UAAAA,IAAI,CAACC,IAAL,CAAUI,kBAAV,CAA6BF,OAA7B,CAAsCG,QAAD,IAAY;AAC7C,gBAAGA,QAAQ,CAACC,aAAT,KAA2B,cAA9B,EAA6C;AACzC,mBAAKC,kBAAL;AACH;;AACD,gBAAGF,QAAQ,CAACC,aAAT,KAA2B,aAA9B,EAA4C;AACxC,mBAAKE,iBAAL;AACH;AACJ,WAPD;AAQH;;AAEDD,QAAAA,kBAAkB,GAAE;AAChB,gBAAME,KAAK,GAAGnB,WAAW,CAAC,KAAKoB,aAAN,CAAzB;AACA,eAAKC,aAAL,CAAmBC,QAAnB,CAA4BH,KAA5B;AACH;;AAEDD,QAAAA,iBAAiB,GAAE;AACf,gBAAMC,KAAK,GAAGnB,WAAW,CAAC,KAAKuB,YAAN,CAAzB;AACA,eAAKC,YAAL,CAAkBF,QAAlB,CAA2BH,KAA3B;AACH;;AAEDM,QAAAA,0BAA0B,GAAE,CAE3B;;AAEDC,QAAAA,kBAAkB,GAAE,CAEnB;;AAEDb,QAAAA,gBAAgB,GAAE,CAEjB;;AAEDc,QAAAA,oBAAoB,GAAE,CAErB;;AAEDC,QAAAA,4BAA4B,GAAE,CAE7B;;AAEDC,QAAAA,eAAe,CAACC,IAAD,EAAOrB,IAAP,EAAY,CAE1B;;AAEDsB,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAvEsC,O","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\nimport { basePageView } from '../common/basePageView';\nimport { taskListResponseType } from '../invite/inviteModel';\nconst { ccclass, property } = _decorator;\n\n@ccclass('earnView')\nexport class earnView extends basePageView {\n\n    @property(Prefab)\n    social_prefab: Prefab\n\n    @property(Prefab)\n    daily_prefab: Prefab\n\n    @property(Node)\n    social_parent: Node\n\n    @property(Node)\n    daily_parent: Node\n\n    \n\n    start() {\n\n    }\n\n    initTaskNode(info:taskListResponseType){\n        info.data.checkInList.forEach(()=>{\n            this.setCheckTaskNode()\n        })\n\n        info.data.taskModelResponses.forEach((taskList)=>{\n            if(taskList.taskModelName === 'Social tasks'){\n                this.initSocialTaskNode()\n            }\n            if(taskList.taskModelName === 'Daily tasks'){\n                this.initDailyTaskNode()\n            }\n        })\n    }\n\n    initSocialTaskNode(){\n        const child = instantiate(this.social_prefab)\n        this.social_parent.addChild(child)\n    }\n\n    initDailyTaskNode(){\n        const child = instantiate(this.daily_prefab)\n        this.daily_parent.addChild(child)\n    }\n\n    clickDailyOrSocialTaskNode(){\n        \n    }\n\n    clickCheckTaskNode(){\n\n    }\n\n    setCheckTaskNode(){\n\n    }\n\n    changeCheckTaskState(){\n\n    }\n\n    changeDailyOrSocialTaskState(){\n        \n    }\n\n    updateTaskState(type, info){\n        \n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}