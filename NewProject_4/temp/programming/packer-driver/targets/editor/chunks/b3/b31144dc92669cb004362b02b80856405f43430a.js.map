{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","Node","basePageModel","loginView","GlobalData","drawModel","discoverModel","homeView","inviteModel","earnModel","profileModel","ccclass","property","tg_token","macSHA_secret","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","twitterOauth","bindTwitter","unBindTwitter","loginModel","Boolean","start","view","getComponent","tgId","URLSearchParams","window","location","search","get","code","state","isUseMock","setPosition","isFirst","checkLoginFirst","controlLoading","controlLoginTypeBtnsVisible","update","deltaTime","isFirstLogin","axios","post","id","Telegram","WebApp","initDataUnsafe","user","data","firstLogin","error","console","log","initData","bindData","headers","inviteCode","loginData","JSON","parse","atob","token","home","game_point","string","String","gamePoint","routeToHome","initOtherModel","draw","discover","invite","earn","profile","veteranLogin","checkVeteranInput","showVeteranError","accountUserName","getAccountInputString","loginChannel","password","getPasswordInputString"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { loginView } from \"./loginView\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport _ from \"lodash\";\nimport GlobalData from \"../home/GloabalClass\";\nimport { drawModel } from \"../draw/drawModel\";\nimport { discoverModel } from \"../discover/discoverModel\";\nimport { homeView } from \"../home/homeView\";\nimport { inviteModel, taskUrls } from \"../invite/inviteModel\";\nimport { earnView } from \"../earn/earnView\";\nimport { earnModel } from \"../earn/earnModel\";\nimport { profileModel } from \"../profile/profileModel\";\nconst { ccclass, property } = _decorator;\n\nconst tg_token = \"7293564939:AAE36f_ferIUCKuMrvgZ_dwNmtyh4oKsJ6s\";\nconst macSHA_secret =\n  \"0d42f108fb7d74f3735c61b1ecdeb8662bef043f2afed10fb3cd3aba3007e0ff\";\n\nexport interface AxiosResponse<T = any, D = any> {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: any;\n  config: any;\n  request?: any;\n}\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    Telegram: any;\n    CryptoJS: any;\n  }\n}\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login/webapp\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport const twitterOauth = {\n  bindTwitter: \"https://api.infinitytest.cc/api/v1/oauth/getTwitterCode\",\n  unBindTwitter: \"https://api.infinitytest.cc/api/v1/oauth/unboundTwitter\",\n};\n\nexport interface bindTwitterResponse {\n  code: string;\n  data: {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    scope: string;\n    tokenType: string;\n  };\n  message: string;\n}\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  initData: string;\n  inviteCode: string;\n  loginChannel: string;\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  password: string;\n  initData?: string;\n  inviteCode?: string;\n  loginChannel?: \"GAME_LOBBY\";\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass(\"loginModel\")\nexport class loginModel extends basePageModel {\n  @property(Boolean)\n  isUseMock: boolean = false;\n\n  @property(Node)\n  profile: Node = null;\n\n  @property(Node)\n  discover: Node = null;\n\n  @property(Node)\n  invite: Node = null;\n\n  @property(Node)\n  earn: Node = null;\n\n  @property(Node)\n  draw: Node = null;\n\n  @property(Node)\n  home: Node = null;\n\n  loginView: loginView;\n  async start() {\n    this.loginView = this.view.getComponent(loginView);\n    const tgId = new URLSearchParams(window.location.search).get(\"tgId\");\n    const code = new URLSearchParams(window.location.search).get(\"code\");\n    const state = new URLSearchParams(window.location.search).get(\"state\");\n    if (this.isUseMock) {\n    }\n    this.view.setPosition(0, 0);\n    const isFirst = await this.checkLoginFirst();\n    if (isFirst) {\n      //展示登录页面\n      this.loginView.controlLoading(false);\n      this.loginView.controlLoginTypeBtnsVisible(true);\n    } else {\n      await this.tgLogin();\n    }\n  }\n\n  update(deltaTime: number) {}\n\n  async checkLoginFirst() {\n    try {\n      const isFirstLogin = await window.axios.post<firstLoginCheckResponseType>(\n        loginUrls.firstLoginCheck,\n        {\n          id: window.Telegram.WebApp.initDataUnsafe.user.id,\n        }\n      );\n      return isFirstLogin.data.data.firstLogin;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async bindTwitter(initData, code, state) {\n    try {\n        //登录成功\n        const bindData = await window.axios.post<bindTwitterResponse>(\n          twitterOauth.bindTwitter,\n          {\n            code: code,\n            state: state,\n          },{\n            headers: { \n                  'Authorization': `Bearer ${initData}`\n            }\n        })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async tgLogin() {\n    try {\n      const inviteCode = new URLSearchParams(window.location.search).get(\n        \"tgWebAppStartParam\"\n      );\n      const loginData = await window.axios.post<tgLoginResponseType>(\n        loginUrls.tgLogin,\n        {\n          initData: window?.Telegram?.WebApp?.initData\n            ? window?.Telegram?.WebApp?.initData\n            : \"query_id=AAF7JpQPAwAAAHsmlA89WAZB&user=%7B%22id%22%3A6703818363%2C%22first_name%22%3A%22fei%22%2C%22last_name%22%3A%22wang%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1727507616&hash=8e9ee796d6c8e264a884949734bee73a83188b1a44b60061d515b6c5089b2931\",\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          inviteCode: inviteCode\n            ? JSON.parse(window.atob(inviteCode)).inviteCode\n            : \"\",\n        }\n      );\n      console.log(\"=========\", loginData);\n      if (loginData?.data?.data?.token) {\n        //登录成功\n        GlobalData.token = loginData?.data?.data?.token;\n        GlobalData.inviteCode = loginData?.data?.data?.inviteCode;\n        this.home.getComponent(homeView).game_point.string = String(\n          loginData.data.data.gamePoint\n        );\n        this.loginView.routeToHome();\n        await this.initOtherModel();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async initOtherModel() {\n    await this.draw.getComponent(drawModel).initData();\n    await this.discover.getComponent(discoverModel).initData();\n    await this.invite.getComponent(inviteModel).initData();\n    this.earn.getComponent(earnModel).initData();\n    this.profile.getComponent(profileModel).initData();\n  }\n  async veteranLogin() {\n    if (this.loginView.checkVeteranInput()) {\n      this.loginView.showVeteranError(true);\n    }\n\n    try {\n      const inviteCode = new URLSearchParams(window.location.search).get(\n        \"tgWebAppStartParam\"\n      );\n      const loginData = await window.axios.post<pwdLoginResponseType>(\n        loginUrls.pwdLogin,\n        {\n          accountUserName: this.loginView.getAccountInputString(),\n          initData: window?.Telegram?.WebApp?.initData\n            ? window?.Telegram?.WebApp?.initData\n            : \"query_id=AAF7JpQPAwAAAHsmlA89WAZB&user=%7B%22id%22%3A6703818363%2C%22first_name%22%3A%22fei%22%2C%22last_name%22%3A%22wang%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1727507616&hash=8e9ee796d6c8e264a884949734bee73a83188b1a44b60061d515b6c5089b2931\",\n          loginChannel: \"GAME_LOBBY\",\n          password: this.loginView.getPasswordInputString(),\n          inviteCode: inviteCode\n            ? JSON.parse(window.atob(inviteCode)).inviteCode\n            : \"\",\n          // photoUrl: `${\n          //   window.Telegram.WebApp.initDataUnsafe.user.photo_url ? window.Telegram.WebApp.initDataUnsafe.user.photo_url : ''\n          // }`,\n          //username: \"\",\n        }\n      );\n\n      if (loginData?.data?.data?.token) {\n        GlobalData.token = loginData?.data?.data?.token;\n        this.loginView.routeToHome();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  \n}\n"]}