{"version":3,"sources":["file:///Users/feiwang/NewProject_4/node_modules/follow-redirects/index.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","_req1","_req2","_req3","_req4","url","define","exports","require","module","__filename","__dirname","URL","http","https","Writable","assert","debug","detectUnsupportedEnvironment","looksLikeNode","process","looksLikeBrowser","window","document","looksLikeV8","isFunction","Error","captureStackTrace","console","warn","useNativeURL","error","code","preservedUrlFields","events","eventHandlers","Object","create","forEach","event","arg1","arg2","arg3","_redirectable","emit","InvalidUrlError","createErrorType","TypeError","RedirectionError","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","destroy","prototype","noop","RedirectableRequest","options","responseCallback","call","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","on","self","_onNativeResponse","response","_processResponse","cause","_performRequest","abort","destroyRequest","_currentRequest","write","data","encoding","callback","isString","isBuffer","length","maxBodyLength","push","end","currentRequest","setHeader","name","value","headers","removeHeader","setTimeout","msecs","destroyOnTimeout","socket","removeListener","addListener","startTimer","_timeout","clearTimeout","clearTimer","once","method","a","b","property","defineProperty","get","host","hostname","pathname","path","searchPos","indexOf","substring","search","protocol","nativeProtocol","nativeProtocols","agents","scheme","slice","agent","request","_currentUrl","test","format","_isRedirect","i","buffers","writeNext","buffer","finished","statusCode","trackRedirects","location","followRedirects","responseUrl","redirects","maxRedirects","requestHeaders","beforeRedirect","assign","Host","req","getHeader","removeMatchingHeaders","currentHostHeader","currentUrlParts","parseUrl","currentHost","currentUrl","redirectUrl","resolveUrl","href","spreadUrlObject","isSubdomain","responseDetails","requestDetails","wrap","protocols","keys","wrappedProtocol","input","isURL","validateUrl","equal","wrappedRequest","defineProperties","configurable","enumerable","writable","parsed","parse","relative","base","resolve","urlObject","target","spread","key","startsWith","port","Number","regex","lastValue","header","undefined","String","trim","message","baseClass","CustomError","properties","constructor","subdomain","domain","dot","endsWith","_cjsExports","_wrap"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'url';\nimport { __cjsMetaURL as _req0} from 'http';\nimport { __cjsMetaURL as _req1} from 'https';\nimport { __cjsMetaURL as _req2} from 'stream';\nimport { __cjsMetaURL as _req3} from 'assert';\nimport { __cjsMetaURL as _req4} from './debug';\nlet _cjsExports;\nlet _wrap;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n var url = require(\"url\");\n var URL = url.URL;\n var http = require(\"http\");\n var https = require(\"https\");\n var Writable = require(\"stream\").Writable;\n var assert = require(\"assert\");\n var debug = require(\"./debug\");\n\n // Preventive platform detection\n // istanbul ignore next\n (function detectUnsupportedEnvironment() {\n   var looksLikeNode = typeof process !== \"undefined\";\n   var looksLikeBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n   var looksLikeV8 = isFunction(Error.captureStackTrace);\n   if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {\n     console.warn(\"The follow-redirects package should be excluded from browser builds.\");\n   }\n }());\n\n // Whether to use the native URL object or the legacy url module\n var useNativeURL = false;\n try {\n   assert(new URL(\"\"));\n }\n catch (error) {\n   useNativeURL = error.code === \"ERR_INVALID_URL\";\n }\n\n // URL fields to preserve in copy operations\n var preservedUrlFields = [\n   \"auth\",\n   \"host\",\n   \"hostname\",\n   \"href\",\n   \"path\",\n   \"pathname\",\n   \"port\",\n   \"protocol\",\n   \"query\",\n   \"search\",\n   \"hash\",\n ];\n\n // Create handlers that pass events from native requests\n var events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\n var eventHandlers = Object.create(null);\n events.forEach(function (event) {\n   eventHandlers[event] = function (arg1, arg2, arg3) {\n     this._redirectable.emit(event, arg1, arg2, arg3);\n   };\n });\n\n // Error types with codes\n var InvalidUrlError = createErrorType(\n   \"ERR_INVALID_URL\",\n   \"Invalid URL\",\n   TypeError\n );\n var RedirectionError = createErrorType(\n   \"ERR_FR_REDIRECTION_FAILURE\",\n   \"Redirected request failed\"\n );\n var TooManyRedirectsError = createErrorType(\n   \"ERR_FR_TOO_MANY_REDIRECTS\",\n   \"Maximum number of redirects exceeded\",\n   RedirectionError\n );\n var MaxBodyLengthExceededError = createErrorType(\n   \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n   \"Request body larger than maxBodyLength limit\"\n );\n var WriteAfterEndError = createErrorType(\n   \"ERR_STREAM_WRITE_AFTER_END\",\n   \"write after end\"\n );\n\n // istanbul ignore next\n var destroy = Writable.prototype.destroy || noop;\n\n // An HTTP(S) request that can be redirected\n function RedirectableRequest(options, responseCallback) {\n   // Initialize the request\n   Writable.call(this);\n   this._sanitizeOptions(options);\n   this._options = options;\n   this._ended = false;\n   this._ending = false;\n   this._redirectCount = 0;\n   this._redirects = [];\n   this._requestBodyLength = 0;\n   this._requestBodyBuffers = [];\n\n   // Attach a callback if passed\n   if (responseCallback) {\n     this.on(\"response\", responseCallback);\n   }\n\n   // React to responses of native requests\n   var self = this;\n   this._onNativeResponse = function (response) {\n     try {\n       self._processResponse(response);\n     }\n     catch (cause) {\n       self.emit(\"error\", cause instanceof RedirectionError ?\n         cause : new RedirectionError({ cause: cause }));\n     }\n   };\n\n   // Perform the first request\n   this._performRequest();\n }\n RedirectableRequest.prototype = Object.create(Writable.prototype);\n\n RedirectableRequest.prototype.abort = function () {\n   destroyRequest(this._currentRequest);\n   this._currentRequest.abort();\n   this.emit(\"abort\");\n };\n\n RedirectableRequest.prototype.destroy = function (error) {\n   destroyRequest(this._currentRequest, error);\n   destroy.call(this, error);\n   return this;\n };\n\n // Writes buffered data to the current native request\n RedirectableRequest.prototype.write = function (data, encoding, callback) {\n   // Writing is not allowed if end has been called\n   if (this._ending) {\n     throw new WriteAfterEndError();\n   }\n\n   // Validate input and shift parameters if necessary\n   if (!isString(data) && !isBuffer(data)) {\n     throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n   }\n   if (isFunction(encoding)) {\n     callback = encoding;\n     encoding = null;\n   }\n\n   // Ignore empty buffers, since writing them doesn't invoke the callback\n   // https://github.com/nodejs/node/issues/22066\n   if (data.length === 0) {\n     if (callback) {\n       callback();\n     }\n     return;\n   }\n   // Only write when we don't exceed the maximum body length\n   if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n     this._requestBodyLength += data.length;\n     this._requestBodyBuffers.push({ data: data, encoding: encoding });\n     this._currentRequest.write(data, encoding, callback);\n   }\n   // Error when we exceed the maximum body length\n   else {\n     this.emit(\"error\", new MaxBodyLengthExceededError());\n     this.abort();\n   }\n };\n\n // Ends the current native request\n RedirectableRequest.prototype.end = function (data, encoding, callback) {\n   // Shift parameters if necessary\n   if (isFunction(data)) {\n     callback = data;\n     data = encoding = null;\n   }\n   else if (isFunction(encoding)) {\n     callback = encoding;\n     encoding = null;\n   }\n\n   // Write data if needed and end\n   if (!data) {\n     this._ended = this._ending = true;\n     this._currentRequest.end(null, null, callback);\n   }\n   else {\n     var self = this;\n     var currentRequest = this._currentRequest;\n     this.write(data, encoding, function () {\n       self._ended = true;\n       currentRequest.end(null, null, callback);\n     });\n     this._ending = true;\n   }\n };\n\n // Sets a header value on the current native request\n RedirectableRequest.prototype.setHeader = function (name, value) {\n   this._options.headers[name] = value;\n   this._currentRequest.setHeader(name, value);\n };\n\n // Clears a header value on the current native request\n RedirectableRequest.prototype.removeHeader = function (name) {\n   delete this._options.headers[name];\n   this._currentRequest.removeHeader(name);\n };\n\n // Global timeout for all underlying requests\n RedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n   var self = this;\n\n   // Destroys the socket on timeout\n   function destroyOnTimeout(socket) {\n     socket.setTimeout(msecs);\n     socket.removeListener(\"timeout\", socket.destroy);\n     socket.addListener(\"timeout\", socket.destroy);\n   }\n\n   // Sets up a timer to trigger a timeout event\n   function startTimer(socket) {\n     if (self._timeout) {\n       clearTimeout(self._timeout);\n     }\n     self._timeout = setTimeout(function () {\n       self.emit(\"timeout\");\n       clearTimer();\n     }, msecs);\n     destroyOnTimeout(socket);\n   }\n\n   // Stops a timeout from triggering\n   function clearTimer() {\n     // Clear the timeout\n     if (self._timeout) {\n       clearTimeout(self._timeout);\n       self._timeout = null;\n     }\n\n     // Clean up all attached listeners\n     self.removeListener(\"abort\", clearTimer);\n     self.removeListener(\"error\", clearTimer);\n     self.removeListener(\"response\", clearTimer);\n     self.removeListener(\"close\", clearTimer);\n     if (callback) {\n       self.removeListener(\"timeout\", callback);\n     }\n     if (!self.socket) {\n       self._currentRequest.removeListener(\"socket\", startTimer);\n     }\n   }\n\n   // Attach callback if passed\n   if (callback) {\n     this.on(\"timeout\", callback);\n   }\n\n   // Start the timer if or when the socket is opened\n   if (this.socket) {\n     startTimer(this.socket);\n   }\n   else {\n     this._currentRequest.once(\"socket\", startTimer);\n   }\n\n   // Clean up on events\n   this.on(\"socket\", destroyOnTimeout);\n   this.on(\"abort\", clearTimer);\n   this.on(\"error\", clearTimer);\n   this.on(\"response\", clearTimer);\n   this.on(\"close\", clearTimer);\n\n   return this;\n };\n\n // Proxy all other public ClientRequest methods\n [\n   \"flushHeaders\", \"getHeader\",\n   \"setNoDelay\", \"setSocketKeepAlive\",\n ].forEach(function (method) {\n   RedirectableRequest.prototype[method] = function (a, b) {\n     return this._currentRequest[method](a, b);\n   };\n });\n\n // Proxy all public ClientRequest properties\n [\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n   Object.defineProperty(RedirectableRequest.prototype, property, {\n     get: function () { return this._currentRequest[property]; },\n   });\n });\n\n RedirectableRequest.prototype._sanitizeOptions = function (options) {\n   // Ensure headers are always present\n   if (!options.headers) {\n     options.headers = {};\n   }\n\n   // Since http.request treats host as an alias of hostname,\n   // but the url module interprets host as hostname plus port,\n   // eliminate the host property to avoid confusion.\n   if (options.host) {\n     // Use hostname if set, because it has precedence\n     if (!options.hostname) {\n       options.hostname = options.host;\n     }\n     delete options.host;\n   }\n\n   // Complete the URL object when necessary\n   if (!options.pathname && options.path) {\n     var searchPos = options.path.indexOf(\"?\");\n     if (searchPos < 0) {\n       options.pathname = options.path;\n     }\n     else {\n       options.pathname = options.path.substring(0, searchPos);\n       options.search = options.path.substring(searchPos);\n     }\n   }\n };\n\n\n // Executes the next native request (initial or redirect)\n RedirectableRequest.prototype._performRequest = function () {\n   // Load the native protocol\n   var protocol = this._options.protocol;\n   var nativeProtocol = this._options.nativeProtocols[protocol];\n   if (!nativeProtocol) {\n     throw new TypeError(\"Unsupported protocol \" + protocol);\n   }\n\n   // If specified, use the agent corresponding to the protocol\n   // (HTTP and HTTPS use different types of agents)\n   if (this._options.agents) {\n     var scheme = protocol.slice(0, -1);\n     this._options.agent = this._options.agents[scheme];\n   }\n\n   // Create the native request and set up its event handlers\n   var request = this._currentRequest =\n         nativeProtocol.request(this._options, this._onNativeResponse);\n   request._redirectable = this;\n   for (var event of events) {\n     request.on(event, eventHandlers[event]);\n   }\n\n   // RFC7230§5.3.1: When making a request directly to an origin server, […]\n   // a client MUST send only the absolute path […] as the request-target.\n   this._currentUrl = /^\\//.test(this._options.path) ?\n     url.format(this._options) :\n     // When making a request to a proxy, […]\n     // a client MUST send the target URI in absolute-form […].\n     this._options.path;\n\n   // End a redirected request\n   // (The first request must be ended explicitly with RedirectableRequest#end)\n   if (this._isRedirect) {\n     // Write the request entity and end\n     var i = 0;\n     var self = this;\n     var buffers = this._requestBodyBuffers;\n     (function writeNext(error) {\n       // Only write if this request has not been redirected yet\n       // istanbul ignore else\n       if (request === self._currentRequest) {\n         // Report any write errors\n         // istanbul ignore if\n         if (error) {\n           self.emit(\"error\", error);\n         }\n         // Write the next buffer if there are still left\n         else if (i < buffers.length) {\n           var buffer = buffers[i++];\n           // istanbul ignore else\n           if (!request.finished) {\n             request.write(buffer.data, buffer.encoding, writeNext);\n           }\n         }\n         // End the request if `end` has been called on us\n         else if (self._ended) {\n           request.end();\n         }\n       }\n     }());\n   }\n };\n\n // Processes a response from the current native request\n RedirectableRequest.prototype._processResponse = function (response) {\n   // Store the redirected response\n   var statusCode = response.statusCode;\n   if (this._options.trackRedirects) {\n     this._redirects.push({\n       url: this._currentUrl,\n       headers: response.headers,\n       statusCode: statusCode,\n     });\n   }\n\n   // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n   // that further action needs to be taken by the user agent in order to\n   // fulfill the request. If a Location header field is provided,\n   // the user agent MAY automatically redirect its request to the URI\n   // referenced by the Location field value,\n   // even if the specific status code is not understood.\n\n   // If the response is not a redirect; return it as-is\n   var location = response.headers.location;\n   if (!location || this._options.followRedirects === false ||\n       statusCode < 300 || statusCode >= 400) {\n     response.responseUrl = this._currentUrl;\n     response.redirects = this._redirects;\n     this.emit(\"response\", response);\n\n     // Clean up\n     this._requestBodyBuffers = [];\n     return;\n   }\n\n   // The response is a redirect, so abort the current request\n   destroyRequest(this._currentRequest);\n   // Discard the remainder of the response to avoid waiting for data\n   response.destroy();\n\n   // RFC7231§6.4: A client SHOULD detect and intervene\n   // in cyclical redirections (i.e., \"infinite\" redirection loops).\n   if (++this._redirectCount > this._options.maxRedirects) {\n     throw new TooManyRedirectsError();\n   }\n\n   // Store the request headers if applicable\n   var requestHeaders;\n   var beforeRedirect = this._options.beforeRedirect;\n   if (beforeRedirect) {\n     requestHeaders = Object.assign({\n       // The Host header was set by nativeProtocol.request\n       Host: response.req.getHeader(\"host\"),\n     }, this._options.headers);\n   }\n\n   // RFC7231§6.4: Automatic redirection needs to done with\n   // care for methods not known to be safe, […]\n   // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n   // the request method from POST to GET for the subsequent request.\n   var method = this._options.method;\n   if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n       // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n       // the server is redirecting the user agent to a different resource […]\n       // A user agent can perform a retrieval request targeting that URI\n       // (a GET or HEAD request if using HTTP) […]\n       (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n     this._options.method = \"GET\";\n     // Drop a possible entity and headers related to it\n     this._requestBodyBuffers = [];\n     removeMatchingHeaders(/^content-/i, this._options.headers);\n   }\n\n   // Drop the Host header, as the redirect might lead to a different host\n   var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n   // If the redirect is relative, carry over the host of the last request\n   var currentUrlParts = parseUrl(this._currentUrl);\n   var currentHost = currentHostHeader || currentUrlParts.host;\n   var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n     url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n   // Create the redirected request\n   var redirectUrl = resolveUrl(location, currentUrl);\n   debug(\"redirecting to\", redirectUrl.href);\n   this._isRedirect = true;\n   spreadUrlObject(redirectUrl, this._options);\n\n   // Drop confidential headers when redirecting to a less secure protocol\n   // or to a different domain that is not a superdomain\n   if (redirectUrl.protocol !== currentUrlParts.protocol &&\n      redirectUrl.protocol !== \"https:\" ||\n      redirectUrl.host !== currentHost &&\n      !isSubdomain(redirectUrl.host, currentHost)) {\n     removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\n   }\n\n   // Evaluate the beforeRedirect callback\n   if (isFunction(beforeRedirect)) {\n     var responseDetails = {\n       headers: response.headers,\n       statusCode: statusCode,\n     };\n     var requestDetails = {\n       url: currentUrl,\n       method: method,\n       headers: requestHeaders,\n     };\n     beforeRedirect(this._options, responseDetails, requestDetails);\n     this._sanitizeOptions(this._options);\n   }\n\n   // Perform the redirected request\n   this._performRequest();\n };\n\n // Wraps the key/value object of protocols with redirect functionality\n function wrap(protocols) {\n   // Default settings\n   var exports = {\n     maxRedirects: 21,\n     maxBodyLength: 10 * 1024 * 1024,\n   };\n\n   // Wrap each protocol\n   var nativeProtocols = {};\n   Object.keys(protocols).forEach(function (scheme) {\n     var protocol = scheme + \":\";\n     var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n     var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n     // Executes a request, following redirects\n     function request(input, options, callback) {\n       // Parse parameters, ensuring that input is an object\n       if (isURL(input)) {\n         input = spreadUrlObject(input);\n       }\n       else if (isString(input)) {\n         input = spreadUrlObject(parseUrl(input));\n       }\n       else {\n         callback = options;\n         options = validateUrl(input);\n         input = { protocol: protocol };\n       }\n       if (isFunction(options)) {\n         callback = options;\n         options = null;\n       }\n\n       // Set defaults\n       options = Object.assign({\n         maxRedirects: exports.maxRedirects,\n         maxBodyLength: exports.maxBodyLength,\n       }, input, options);\n       options.nativeProtocols = nativeProtocols;\n       if (!isString(options.host) && !isString(options.hostname)) {\n         options.hostname = \"::1\";\n       }\n\n       assert.equal(options.protocol, protocol, \"protocol mismatch\");\n       debug(\"options\", options);\n       return new RedirectableRequest(options, callback);\n     }\n\n     // Executes a GET request, following redirects\n     function get(input, options, callback) {\n       var wrappedRequest = wrappedProtocol.request(input, options, callback);\n       wrappedRequest.end();\n       return wrappedRequest;\n     }\n\n     // Expose the properties on the wrapped protocol\n     Object.defineProperties(wrappedProtocol, {\n       request: { value: request, configurable: true, enumerable: true, writable: true },\n       get: { value: get, configurable: true, enumerable: true, writable: true },\n     });\n   });\n   return exports;\n }\n\n function noop() { /* empty */ }\n\n function parseUrl(input) {\n   var parsed;\n   // istanbul ignore else\n   if (useNativeURL) {\n     parsed = new URL(input);\n   }\n   else {\n     // Ensure the URL is valid and absolute\n     parsed = validateUrl(url.parse(input));\n     if (!isString(parsed.protocol)) {\n       throw new InvalidUrlError({ input });\n     }\n   }\n   return parsed;\n }\n\n function resolveUrl(relative, base) {\n   // istanbul ignore next\n   return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n }\n\n function validateUrl(input) {\n   if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n     throw new InvalidUrlError({ input: input.href || input });\n   }\n   if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n     throw new InvalidUrlError({ input: input.href || input });\n   }\n   return input;\n }\n\n function spreadUrlObject(urlObject, target) {\n   var spread = target || {};\n   for (var key of preservedUrlFields) {\n     spread[key] = urlObject[key];\n   }\n\n   // Fix IPv6 hostname\n   if (spread.hostname.startsWith(\"[\")) {\n     spread.hostname = spread.hostname.slice(1, -1);\n   }\n   // Ensure port is a number\n   if (spread.port !== \"\") {\n     spread.port = Number(spread.port);\n   }\n   // Concatenate path\n   spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n   return spread;\n }\n\n function removeMatchingHeaders(regex, headers) {\n   var lastValue;\n   for (var header in headers) {\n     if (regex.test(header)) {\n       lastValue = headers[header];\n       delete headers[header];\n     }\n   }\n   return (lastValue === null || typeof lastValue === \"undefined\") ?\n     undefined : String(lastValue).trim();\n }\n\n function createErrorType(code, message, baseClass) {\n   // Create constructor\n   function CustomError(properties) {\n     // istanbul ignore else\n     if (isFunction(Error.captureStackTrace)) {\n       Error.captureStackTrace(this, this.constructor);\n     }\n     Object.assign(this, properties || {});\n     this.code = code;\n     this.message = this.cause ? message + \": \" + this.cause.message : message;\n   }\n\n   // Attach constructor and set default properties\n   CustomError.prototype = new (baseClass || Error)();\n   Object.defineProperties(CustomError.prototype, {\n     constructor: {\n       value: CustomError,\n       enumerable: false,\n     },\n     name: {\n       value: \"Error [\" + code + \"]\",\n       enumerable: false,\n     },\n   });\n   return CustomError;\n }\n\n function destroyRequest(request, error) {\n   for (var event of events) {\n     request.removeListener(event, eventHandlers[event]);\n   }\n   request.on(\"error\", noop);\n   request.destroy(error);\n }\n\n function isSubdomain(subdomain, domain) {\n   assert(isString(subdomain) && isString(domain));\n   var dot = subdomain.length - domain.length - 1;\n   return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n }\n\n function isString(value) {\n   return typeof value === \"string\" || value instanceof String;\n }\n\n function isFunction(value) {\n   return typeof value === \"function\";\n }\n\n function isBuffer(value) {\n   return typeof value === \"object\" && (\"length\" in value);\n }\n\n function isURL(value) {\n   return URL && value instanceof URL;\n }\n\n // Exports\n module.exports = wrap({ http: http, https: https });\n module.exports.wrap = wrap;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n_wrap = module.exports.wrap;\n\n}, () => ({\n  'url': _req,\n  'http': _req0,\n  'https': _req1,\n  'stream': _req2,\n  'assert': _req3,\n  './debug': _req4,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}