{"version":3,"sources":["file:///Users/feiwang/NewProject_4/node_modules/axios/lib/adapters/http.js"],"names":["dispatchBeforeRedirect","options","responseDetails","beforeRedirects","proxy","config","setProxy","configProxy","location","proxyUrl","getProxyForUrl","URL","username","auth","password","base64","Buffer","from","toString","headers","host","hostname","port","proxyHost","path","protocol","includes","beforeRedirect","redirectOptions","href","utils","settle","buildFullPath","buildURL","http","https","util","followRedirects","zlib","VERSION","transitionalDefaults","AxiosError","CanceledError","platform","fromDataURI","stream","AxiosHeaders","AxiosTransformStream","EventEmitter","formDataToStream","readBlob","ZlibHeaderTransformStream","callbackify","progressEventReducer","progressEventDecorator","asyncDecorator","zlibOptions","flush","constants","Z_SYNC_FLUSH","finishFlush","brotliOptions","BROTLI_OPERATION_FLUSH","isBrotliSupported","isFunction","createBrotliDecompress","httpFollow","httpsFollow","isHttps","supportedProtocols","protocols","map","flushOnFinish","throttled","on","isHttpAdapterSupported","process","kindOf","wrapAsync","asyncExecutor","Promise","resolve","reject","onDone","isDone","done","value","isRejected","_resolve","_reject","reason","onDoneHandler","catch","resolveFamily","address","family","isString","TypeError","indexOf","buildAddressEntry","isObject","httpAdapter","dispatchHttpRequest","data","lookup","responseType","responseEncoding","method","toUpperCase","rejected","req","_lookup","isArray","opt","cb","err","arg0","arg1","addresses","addr","all","emitter","onFinished","cancelToken","unsubscribe","abort","signal","removeEventListener","removeAllListeners","emit","type","once","subscribe","aborted","addEventListener","fullPath","baseURL","url","parsed","hasBrowserEnv","origin","undefined","convertedData","status","statusText","Blob","env","ERR_BAD_REQUEST","stripBOM","Readable","normalize","set","onUploadProgress","onDownloadProgress","maxRate","maxUploadRate","maxDownloadRate","isSpecCompliantForm","userBoundary","getContentType","formHeaders","tag","boundary","isFormData","getHeaders","hasContentLength","knownLength","promisify","getLength","call","Number","isFinite","setContentLength","e","isBlob","size","setContentType","isStream","isBuffer","isArrayBuffer","Uint8Array","length","maxBodyLength","contentLength","toFiniteNumber","getContentLength","objectMode","pipeline","noop","urlUsername","urlPassword","delete","pathname","search","params","paramsSerializer","replace","customErr","Error","message","exists","toJSON","agents","httpAgent","httpsAgent","isUndefined","socketPath","startsWith","slice","transport","isHttpsRequest","test","agent","maxRedirects","Infinity","insecureHTTPParser","request","handleResponse","res","destroyed","streams","responseLength","transformStream","push","responseStream","lastRequest","decompress","statusCode","toLowerCase","createUnzip","offListeners","finished","response","statusMessage","responseBuffer","totalResponseBytes","handleStreamData","chunk","maxContentLength","destroy","ERR_BAD_RESPONSE","handlerStreamAborted","handleStreamError","handleStreamEnd","responseData","concat","handleRequestError","handleRequestSocket","socket","setKeepAlive","timeout","parseInt","isNaN","ERR_BAD_OPTION_VALUE","setTimeout","handleRequestTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","ECONNABORTED","ended","errored","pipe","end","__setProxy"],"mappings":"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","sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport {getProxyForUrl} from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport {EventEmitter} from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\nconst flushOnFinish = (stream, [throttled, flush]) => {\n  stream\n    .on('end', flush)\n    .on('error', flush);\n\n  return throttled;\n}\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options, responseDetails) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options, responseDetails);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\nconst resolveFamily = ({address, family}) => {\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n  return ({\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  });\n}\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {address, family});\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, (value) => utils.isArray(value) ? value : [value]);\n      // hotfix to support opt.all option which is required for node 20.x\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          if (err) {\n            return cb(err);\n          }\n\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      }\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const parsed = new URL(fullPath, platform.hasBrowserEnv ? platform.origin : undefined);\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const {onUploadProgress, onDownloadProgress} = config;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', flushOnFinish(\n        data,\n        progressEventDecorator(\n          contentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress), false, 3)\n        )\n      ));\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    // cacheable-lookup integration hotfix\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname.startsWith(\"[\") ? parsed.hostname.slice(1, -1) : parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress || maxDownloadRate) {\n        const transformStream = new AxiosTransformStream({\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', flushOnFinish(\n          transformStream,\n          progressEventDecorator(\n            responseLength,\n            progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)\n          )\n        ));\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n"]}