{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","basePageModel","loginView","GlobalConfig","ccclass","property","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","loginModel","Boolean","start","isFirst","checkLoginFirst","update","deltaTime","isFirstLogin","window","axios","post","id","Telegram","WebApp","initDataUnsafe","data","firstLogin","loginData","authDate","firstName","hash","lastName","loginChannel","photoUrl","username","token","_instance","veteranLogin","view","getComponent","accountInput","string","length","pwdInput","accountUserName","password"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { loginView } from \"./loginView\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nconst { ccclass, property } = _decorator;\n\nexport interface AxiosResponse<T = any, D = any> {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: any;\n  config: any;\n  request?: any;\n}\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    Telegram: any\n  }\n}\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  password: string;\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass(\"loginModel\")\nexport class loginModel extends basePageModel {\n    @property(Boolean)\n    isUseMock: boolean = false\n\n  async start() {\n    const isFirst = await this.checkLoginFirst();\n    if (isFirst) {\n      //展示登录页面\n    } else {\n      await this.tgLogin();\n    }\n  }\n\n  update(deltaTime: number) {}\n\n  async checkLoginFirst() {\n    const isFirstLogin = await window.axios.post<firstLoginCheckResponseType>(\n      loginUrls.firstLoginCheck,\n      {\n        id: window.Telegram.WebApp.initDataUnsafe.id,\n      }\n    );\n    return isFirstLogin.data.data.firstLogin;\n  }\n\n  async tgLogin() {\n    const loginData = await window.axios.post<tgLoginResponseType>(\n      loginUrls.tgLogin,\n      {\n        authDate: 0,\n        firstName: `${window.Telegram.WebApp.initDataUnsafe.firstName}`,\n        hash: `${window.Telegram.WebApp.initDataUnsafe.hash}`,\n        id: window.Telegram.WebApp.initDataUnsafe.id,\n        lastName: `${window.Telegram.WebApp.initDataUnsafe.lastName}`,\n        loginChannel: \"GAME_LOBBY\",\n        photoUrl: '',\n        username: ''\n      }\n    );\n\n    if (loginData?.data?.data?.token) {\n      //登录成功\n      GlobalConfig._instance.token = loginData?.data?.data?.token\n    }\n  }\n\n  async veteranLogin(){\n    if(this.view.getComponent(loginView).accountInput.string.length || this.view.getComponent(loginView).pwdInput.string.length){\n        \n    }\n\n    const loginData = await window.axios.post<pwdLoginResponseType>(\n        loginUrls.pwdLogin,\n        {\n            accountUserName: this.view.getComponent(loginView).accountInput.string,\n            authDate: 0,\n            firstName: `${window.Telegram.WebApp.initDataUnsafe.firstName}`,\n            hash: `${window.Telegram.WebApp.initDataUnsafe.hash}`,\n            id: window.Telegram.WebApp.initDataUnsafe.id,\n            lastName: window.Telegram.WebApp.initDataUnsafe.lastName,\n            loginChannel: \"GAME_LOBBY\",\n            password: this.view.getComponent(loginView).pwdInput.string,\n            photoUrl: '',\n            username: ''\n        }\n      );\n\n      if(loginData?.data?.data?.token){\n        GlobalConfig._instance.token = loginData?.data?.data?.token\n        //this.view.getComponent(loginView)\n        //跳转到\n      }\n  }\n}\n"]}