{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/draw/drawModel.ts"],"names":["_decorator","basePageModel","drawView","GlobalData","ccclass","property","walletUrls","bindWallet","unbindWallet","queryBindWallet","drawModel","drawPage","start","window","bindUxuyWallet","view","getComponent","walletInfo","getWalletInfo","walletAddress","setWalletInfo","update","deltaTime","controlConnectWalletBtnsVisible","walletChain","uxuyethereum","_account","address","chainName","uxuyWalletConnect","console","log","axios","post","headers","token","error","unBindWallet","controlUnbindBtnVisible","data","code","copyAddress","navigator","clipboard","writeText","string","then","Telegram","WebApp","showPopup","title","message","buttons","id","text","type","buttonId","catch","err"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nimport { basePageModel } from \"../common/basePageModel\";\nimport { AxiosResponse } from \"../login/loginModel\";\nimport { GlobalConfig } from \"../home/GlobalConfig\";\nimport { drawView } from \"./drawView\";\nimport GlobalData from '../home/GloabalClass'\nconst { ccclass, property } = _decorator;\n\ndeclare global {\n  interface Window {\n    axios: {\n      post<T = any, R = AxiosResponse<T>, D = any>(\n        url: string,\n        data?: D,\n        config?: any\n      ): Promise<R>;\n    };\n    startCanvas: any;\n    uxuyethereum: any;\n    uxuyWalletConnect: any;\n\n    bindUxuyWallet\n  }\n}\n\nexport const walletUrls = {\n  bindWallet: \"https://api.infinitytest.cc/api/v1/user/info/edit/bindWallet\",\n  unbindWallet:\n    \"https://api.infinitytest.cc/api/v1/user/info/edit/unbindWallet\",\n  queryBindWallet:\n    \"https://api.infinitytest.cc/api/v1/user/info/queryBindWallet\",\n};\n\nexport interface BindWalletData {\n  walletAddress: string;\n  walletChain: string;\n}\n\nexport interface BindWalletResponse {\n  code: string;\n  message: string;\n}\n\nexport interface UnbindWalletData {}\n\nexport interface UnbindWalletResponse {\n  code: string;\n  message: string;\n}\n\nexport interface QueryBindWalletData {}\n\nexport interface QueryBindWalletResponse {\n  code: string;\n  data: {\n    walletAddress: string;\n    walletChain: string;\n  };\n  message: string;\n}\n\n@ccclass(\"drawModel\")\nexport class drawModel extends basePageModel {\n  drawPage: drawView\n  async start() {\n    window.bindUxuyWallet = this.bindUxuyWallet\n    this.drawPage = this.view.getComponent(drawView)\n    const walletInfo = await this.getWalletInfo()\n    if(walletInfo.walletAddress){\n      this.drawPage.setWalletInfo(walletInfo.walletAddress)\n    }\n  }\n\n  update(deltaTime: number) {}\n\n  async bindUxuyWallet() {\n    try {\n      this.drawPage.controlConnectWalletBtnsVisible(false)\n      let walletAddress\n      let walletChain\n      if(window.uxuyethereum._account.address){\n        walletAddress = window.uxuyethereum._account.address\n        walletChain = window.uxuyethereum._account.chainName\n      }else{\n        await window.uxuyWalletConnect()\n        walletAddress = window.uxuyethereum._account.address\n        walletChain = window.uxuyethereum._account.chainName\n      }\n      console.log('========',walletAddress, walletChain)\n      const walletInfo = await window.axios.post<BindWalletResponse>(\n        walletUrls.bindWallet,{\n          walletAddress: walletAddress,\n          walletChain: walletChain,\n        },{\n          headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n            }\n        }\n      );\n      this.drawPage.setWalletInfo(walletAddress)\n\n    } catch (error) {\n      \n    }\n  }\n\n  async unBindWallet() {\n    const walletInfo = await window.axios.post<UnbindWalletResponse>(\n      walletUrls.unbindWallet\n    ,{},{\n        headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n          }\n    });\n    this.drawPage.controlUnbindBtnVisible(false)\n    return walletInfo?.data?.code;\n  }\n\n  async getWalletInfo() {\n    const walletInfo = await window.axios.post<QueryBindWalletResponse>(\n      walletUrls.queryBindWallet\n    ,{},{\n        headers: { \n              'Authorization': `Bearer ${GlobalData.token}`\n          }\n    });\n    return walletInfo?.data?.data;\n  }\n\n  async copyAddress(){\n    navigator.clipboard.writeText(this.drawPage.address.string).then(function() {\n      window.Telegram.WebApp.showPopup({\n        title: 'Copy Success', // 弹出窗口的标题\n        message: 'copy address success！', // 弹出窗口的消息内容\n        buttons: [\n          { id: 'btn2', text: 'Button 2', type: 'ok' }, // 'type' 可以是 'ok', 'close', 'cancel', 'default', 'destructive'\n          { id: 'btn3', text: 'Button 3', type: 'cancel' }\n        ]\n      }, (buttonId) => {\n        // 弹出窗口关闭时的回调函数\n        if (buttonId) {\n          console.log('User pressed button:', buttonId);\n        } else {\n          console.log('Popup was closed without pressing a button');\n        }\n      });\n    }).catch(err => {\n      window.Telegram.WebApp.showPopup({\n        title: 'Copy failed', // 弹出窗口的标题\n        message: 'copy address failed', // 弹出窗口的消息内容\n        buttons: [\n          { id: 'btn2', text: 'Button 2', type: 'ok' }, // 'type' 可以是 'ok', 'close', 'cancel', 'default', 'destructive'\n          { id: 'btn3', text: 'Button 3', type: 'cancel' }\n        ]\n      }, (buttonId) => {\n        // 弹出窗口关闭时的回调函数\n        if (buttonId) {\n          console.log('User pressed button:', buttonId);\n        } else {\n          console.log('Popup was closed without pressing a button');\n        }\n      });\n    });\n  }\n}\n"]}