{"version":3,"sources":["file:///Users/feiwang/NewProject_4/assets/resources/scripts/login/loginModel.ts"],"names":["_decorator","Component","ccclass","property","walletType","walletChain","loginUrls","firstLoginCheck","tgLogin","pwdLogin","loginModel","start","update","deltaTime","checkLoginFirst"],"mappings":";;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;4BAElBI,U,0BAAAA,U;eAAAA,U;;;6BAEAC,W,0BAAAA,W;eAAAA,W;;;2BAECC,S,GAAY;AACvBC,QAAAA,eAAe,EAAE,0DADM;AAEvBC,QAAAA,OAAO,EAAE,uDAFc;AAGvBC,QAAAA,QAAQ,EAAE;AAHa,O;;4BAsFZC,U,WADZR,OAAO,CAAC,YAAD,C,gBAAR,MACaQ,UADb,SACgCT,SADhC,CAC0C;AAC3B,cAALU,KAAK,GAAG,CACV;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE;;AAEP,cAAfC,eAAe,GAAE,CACrB;AACA;AACA;AACA;AACD;;AAEY,cAAPN,OAAO,GAAE,CACb;AACA;AACA;AAEA;AACA;AACA;AACD;;AA3BmC,O","sourcesContent":["//import axios from 'axios';\nimport { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\nexport enum walletType {}\n\nexport enum walletChain {}\n\nexport const loginUrls = {\n  firstLoginCheck: \"https://api.infinitytest.cc/api/v1/user/auth/first_login\",\n  tgLogin: \"https://api.infinitytest.cc/api/v1/user/auth/tg_login\",\n  pwdLogin: \"https://api.infinitytest.cc/api/v1/user/auth/pwd_login\",\n};\n\nexport interface firstLoginCheckDataType {\n  id: number;\n}\n\nexport interface firstLoginCheckResponseType {\n  code: string;\n  data: {\n    firstLogin: true;\n  };\n  message: string;\n}\n\nexport interface tgLoginDataType {\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface tgLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    totalPoint: 0;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\nexport interface pwdLoginDataType {\n  accountUserName: string;\n  authDate?: number;\n  firstName?: string;\n  hash?: string;\n  id: number;\n  inviteCode?: string;\n  lastName?: string;\n  loginChannel?: \"GAME_LOBBY\";\n  password: string;\n  photoUrl?: string;\n  username?: string;\n}\n\nexport interface pwdLoginResponseType {\n  code: string;\n  data: {\n    avatar: string;\n    email: string;\n    expiration: number;\n    gamePoint: number;\n    inviteCode: string;\n    isNewUser: true;\n    isSetPwd: true;\n    token: string;\n    userId: number;\n    userName: string;\n    walletAddress: string;\n    walletChain: \"ETH\";\n    walletType: \"METAMASK\";\n  };\n  message: string;\n}\n\n@ccclass('loginModel')\nexport class loginModel extends Component {\n    async start() {\n        // const isFirst = await this.checkLoginFirst()\n        // if(isFirst){\n        //     //展示登录页面\n        // }else{\n        //    await this.tgLogin()\n        // }\n      }\n    \n      update(deltaTime: number) {}\n    \n      async checkLoginFirst(){\n        // const isFirstLogin = await axios.post<firstLoginCheckResponseType>(loginUrls.firstLoginCheck, {\n        //     id: 0\n        // })\n        // return isFirstLogin.data.data.firstLogin\n      }\n    \n      async tgLogin(){\n        // const loginData = await axios.post<tgLoginResponseType>(loginUrls.tgLogin, {\n        //     id: 0\n        // })\n    \n        // if(loginData?.data?.data?.token){\n        //     //登录成功\n        // }\n      }\n}\n\n"]}