{"version":3,"sources":["file:///Users/feiwang/NewProject_4/node_modules/axios/lib/core/Axios.js"],"names":["Axios","utils","buildURL","InterceptorManager","dispatchRequest","mergeConfig","buildFullPath","validator","AxiosHeaders","validators","constructor","instanceConfig","defaults","interceptors","request","response","configOrUrl","config","_request","err","Error","dummy","captureStackTrace","stack","replace","String","endsWith","e","url","transitional","paramsSerializer","headers","undefined","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","clarifyTimeoutError","isFunction","serialize","encode","function","method","toLowerCase","contextHeaders","merge","common","forEach","concat","requestInterceptorChain","synchronousRequestInterceptors","unshiftRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","pushResponseInterceptors","push","promise","i","len","chain","bind","apply","length","Promise","resolve","then","newConfig","onFulfilled","onRejected","error","call","reject","getUri","fullPath","baseURL","params","forEachMethodNoData","prototype","data","forEachMethodWithData","generateHTTPMethod","isForm","httpMethod"],"mappings":"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","sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n"]}